// Generated by LiveScript 1.3.1
(function(){
  module.exports = function(repo, p){
    return repo.commands.push({
      name: "fs",
      desc: "Finds file(s) by glob-like mask (*.* or **/*.* or */ or all)",
      input: 'nothing',
      output: 'lines',
      enabled: true,
      doc: {
        examples: ['']
      },
      compile: function(){
        var glob;
        glob = require('glob-all');
        return function(skip, mask, callback){
          var fs, path, transformMask, transform;
          fs = require('fs');
          path = require('path');
          transformMask = (function(){
            switch (false) {
            case !(mask.indexOf(' ') > -1):
              return mask.split(' ');
            case mask !== 'all':
              return ['**/*'];
            case (mask != null ? mask : '') !== '':
              return ["*"];
            default:
              return [mask];
            }
          }());
          transform = function(name){
            var isDir, base, dir, res;
            isDir = fs.lstatSync(name).isDirectory();
            base = path.basename(name);
            dir = function(name){
              return name.yellow + '/';
            };
            res = (function(){
              switch (false) {
              case !isDir:
                return dir(name);
              default:
                return name;
              }
            }());
            return res;
          };
          return glob(transformMask, {
            silent: true,
            strict: false
          }, function(err, files){
            if ((files != null ? files.length : void 8) > 0) {
              return callback(
              p.map(transform)(
              files));
            }
          });
        };
      }
    });
  };
}).call(this);
